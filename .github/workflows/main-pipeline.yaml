name: Main pipeline
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Notify slack success
        if: success()
        id: slack # IMPORTANT: reference this step ID value in future Slack steps
        env:
          SLACK_BOT_TOKEN: xoxb-3073861353-2098191165254-8JZsPjt7XYNwSHTFjMIrDhvo
        uses: voxmedia/github-action-slack-notify-build@v1.1.2
        with:
          channel: 'ovi_pro_pipeline_development_deployments'
          status: STARTED
          color: warning
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: './infra/package-lock.json'
      - name: set account to dev & environment to staging
        if: endsWith(github.ref, '/main')
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          echo "ACCOUNT=dev" >> $GITHUB_ENV
      - name: Get access for alma packages
        run: echo "GITHUB_ACCESS_TOKEN=${{ secrets.MEPA_GH_ACTIONS_BOT_TOKEN }}" >> $GITHUB_ENV
      - name: Set up Maven settings
        uses: s4u/maven-settings-action@v2.3.0
        with:
          servers: |
            [{
                "id": "mepa-ovipro",
                "username": "${{ secrets.MEPA_GH_ACTIONS_BOT_USERNAME }}",
                "password": "${{ secrets.MEPA_GH_ACTIONS_BOT_TOKEN }}"
            }]
      - name: install deps & build
        working-directory: ./infra
        run: |
          npm install
          npm run build:all
      - name: Run tests
        working-directory: ./infra
        run: |
          npm run test
          npm run it
      - name: deploy all stacks
        working-directory: ./infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CDK_USER_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CDK_USER_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile deploy_profile
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile deploy_profile
          aws configure set region eu-west-1 --profile deploy_profile
          npx cdk deploy --context account=${{ env.ACCOUNT }} --context environment=${{ env.ENVIRONMENT }} --profile deploy_profile --require-approval never --all
      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: xoxb-3073861353-2098191165254-8JZsPjt7XYNwSHTFjMIrDhvo
        uses: voxmedia/github-action-slack-notify-build@v1.1.2
        with:
          # Updates existing message from the first step
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: 'ovi_pro_pipeline_development_deployments'
          status: STARTED
          color: good
      - name: Notify slack failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: xoxb-3073861353-2098191165254-8JZsPjt7XYNwSHTFjMIrDhvo
        uses: voxmedia/github-action-slack-notify-build@v1.1.2
        with:
          # Updates existing message from the first step
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: 'ovi_pro_pipeline_development_deployments'
          status: FAILED
          color: danger
