name: Run tests

on: push
jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Configure AWS credentials for Code Artifact packages
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.CODEARTIFACT_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.CODEARTIFACT_AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
    - name: Get access for alma packages
      run: echo "CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain almamedia --domain-owner 277005280161 --query authorizationToken --output text)" >> $GITHUB_ENV
    - name: Install deps & build
      working-directory: ./infra
      run: |
        npm install --prefer-online
        npm run build:lambda:java
    - name: Build lambdas
      working-directory: ./infra
      run: |
        npm run build:lambda:ts
    ################################
    # Run Linter against code base #
    ################################
    - name: Lint Code Base
      uses: github/super-linter@v3
      continue-on-error: true
      env:
        VALIDATE_ALL_CODEBASE: true
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_BASH: false
        VALIDATE_BASH_EXEC: false
        VALIDATE_DOCKERFILE: false
        VALIDATE_DOCKERFILE_HADOLINT: false
        VALIDATE_EDITORCONFIG: false
        VALIDATE_JAVASCRIPT_STANDARD: false
        VALIDATE_JSCPD: false
        VALIDATE_MARKDOWN: false
        VALIDATE_SHELL_SHFMT: false
        VALIDATE_JAVASCRIPT_ES: false
        VALIDATE_TYPESCRIPT_STANDARD: false
        VALIDATE_TYPESCRIPT_ES: false
    - name: Run tests
      working-directory: ./infra
      run: npm run test
    - name: SonarCloud scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
        projectBaseDir: ./infra
        args: >
          -Dsonar.organization=almamedia
          -Dsonar.moduleKey=${{ github.event.repository.name }}:${{ github.event.repository.name }}:${{ github.run_id }}
          -Dsonar.projectKey=almamedia_${{ github.event.repository.name }}
          -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
          -Dsonar.testExecutionReportPaths=test-report.xml
          -Dsonar.branch.name=${{ steps.extract_branch.outputs.branch }}
          -Dsonar.branch.target=main
          -Dsonar.exlusions=**/node_modules/**,**/*.test.ts,**/*.java
          -Dsonar.java.source=11
          -Dsonar.java.binaries=functions/database/aurora/migrator/target/classes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.MEPA_ASUMINEN_GH_ACTIONS_BOT_SONARCLOUD_TOKEN }}