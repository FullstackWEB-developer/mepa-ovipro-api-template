name: Deploy feature environment
on:
  push:
    branches:
      - "feature/**"
concurrency:
  group: ${{ github.ref }}
jobs:
  build:
    name: Deploy feature environment
    permissions:
      id-token: write # needed to interact with GitHub's OIDC Token endpoint.
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "./infra/package-lock.json"
      - name: Notify slack success
        if: success()
        id: slack # IMPORTANT: reference this step ID value in future Slack steps
        env:
          SLACK_BOT_TOKEN: ${{ secrets.MEPA_ASUMINEN_OVIPRO_SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.1.2
        with:
          channel: "ovi_pro_pipeline_development_deployments"
          status: STARTED
          color: warning
      - name: Set account to dev & environment to feature
        if: startsWith(github.ref, 'refs/heads/feature/')
        run: |
          echo "ENVIRONMENT=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "ACCOUNT=dev" >> $GITHUB_ENV
      - name: Get access for alma packages
        run: echo "GITHUB_ACCESS_TOKEN=${{ secrets.MEPA_GH_ACTIONS_BOT_TOKEN }}" >> $GITHUB_ENV
      - name: Set up Maven settings
        uses: s4u/maven-settings-action@v2.3.0
        with:
          servers: |
            [{
                "id": "mepa-ovipro",
                "username": "${{ secrets.MEPA_GH_ACTIONS_BOT_USERNAME }}",
                "password": "${{ secrets.MEPA_GH_ACTIONS_BOT_TOKEN }}"
            }]
      - name: install deps & build
        working-directory: ./infra
        run: |
          npm install
          npm run build:all
      - name: Run tests
        working-directory: ./infra
        run: npm run test
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: eu-west-1
          role-to-assume: FIND_ME_AND_REPLACE_WITH_REPO_OIDC_ROLE_ARN
          role-session-name: feature-pipeline
      - name: deploy all stacks
        working-directory: ./infra
        run: |
          npx cdk deploy --context account=${{ env.ACCOUNT }} --context environment=${{ env.ENVIRONMENT }} --require-approval never --all
      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.MEPA_ASUMINEN_OVIPRO_SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.1.2
        with:
          # Updates existing message from the first step
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: "ovi_pro_pipeline_development_deployments"
          status: STARTED
          color: good
      - name: Notify slack failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.MEPA_ASUMINEN_OVIPRO_SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1.1.2
        with:
          # Updates existing message from the first step
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: "ovi_pro_pipeline_development_deployments"
          status: FAILED
          color: danger
