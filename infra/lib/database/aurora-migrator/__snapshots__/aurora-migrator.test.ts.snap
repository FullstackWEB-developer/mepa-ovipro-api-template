// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Aurora Migrator 1`] = `
Object {
  "Description": "Mock1 Environment: Serverless Aurora cluster migrator for OviPRO infrastructure",
  "Parameters": Object {
    "AssetParameters-[HASH REMOVED]": Object {
      "Description": "Artifact hash for asset [HASH REMOVED]",
      "Type": "String",
    },
    "AssetParameters-[HASH REMOVED]": Object {
      "Description": "S3 bucket for asset [HASH REMOVED]",
      "Type": "String",
    },
    "AssetParameters-[HASH REMOVED]": Object {
      "Description": "S3 key for asset [HASH REMOVED]",
      "Type": "String",
    },
    "AssetParameters-[HASH REMOVED]": Object {
      "Description": "Artifact hash for asset [HASH REMOVED]",
      "Type": "String",
    },
    "AssetParameters-[HASH REMOVED]": Object {
      "Description": "S3 bucket for asset [HASH REMOVED]",
      "Type": "String",
    },
    "AssetParameters-[HASH REMOVED]": Object {
      "Description": "S3 key for asset [HASH REMOVED]",
      "Type": "String",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters-[HASH REMOVED]",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters-[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters-[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MigratorB44932C8": Object {
      "DependsOn": Array [
        "MigratorServiceRoleDefaultPolicy8BA0D813",
        "MigratorServiceRoleE35D46BF",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters-[HASH REMOVED]",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters-[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters-[HASH REMOVED]",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "Database schema migration/cleaner utility: OviproMock1Migrator",
        "Environment": Object {
          "Variables": Object {
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "Ovipro-Environment-Mock1-MigrationBucketStack:MigrationBucketStackExportsOutputRefOviproMock1OvipromockMock1migrationsD48EF7328136446F",
            },
            "POWERTOOLS_METRICS_NAMESPACE": "OviproMock1FiAlmamediaOviproMigratorAppHandleRequest",
            "POWERTOOLS_SERVICE_NAME": "OviproMock1Migrator",
            "SECRET_ARN": Object {
              "Fn::ImportValue": "Ovipro-Environment-Mock1-AuroraClusterStack:AuroraClusterStackExportsOutputRefMock1DbCredMigratorSecretFD4A1AB6DAA1A8F1",
            },
          },
        },
        "FunctionName": "OviproMock1Migrator",
        "Handler": "fi.almamedia.ovipro.migrator.App::handleRequest",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "MigratorServiceRoleE35D46BF",
            "Arn",
          ],
        },
        "Runtime": "java11",
        "Timeout": 599,
        "TracingConfig": Object {
          "Mode": "Active",
        },
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "MigratorLambdaSecurityGroup4005CC4E",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            "p-12345",
            "p-67890",
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "MigratorLambdaSecurityGroup4005CC4E": Object {
      "Properties": Object {
        "GroupDescription": "TestContextProvider/AuroraMigratorStack/MigratorLambdaSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "MigratorLambdaSecurityGroupTestContextProviderAuroraClusterStackServerlessClusterSecurityGroupB8FC79935432to21D3C046": Object {
      "Properties": Object {
        "Description": "From Lambda migrator to Aurora cluster",
        "FromPort": 5432,
        "GroupId": Object {
          "Fn::ImportValue": "Ovipro-Environment-Mock1-AuroraClusterStack:AuroraClusterStackExportsOutputFnGetAttServerlessClusterSecurityGroup5151F34FGroupId11D96200",
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "MigratorLambdaSecurityGroup4005CC4E",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MigratorLogRetentionEDE7FEB6": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "MigratorB44932C8",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "MigratorServiceRoleDefaultPolicy8BA0D813": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "Ovipro-Environment-Mock1-MigrationBucketStack:MigrationBucketStackExportsOutputFnGetAttOviproMock1OvipromockMock1migrationsD48EF732Arn9D99CA52",
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "Ovipro-Environment-Mock1-MigrationBucketStack:MigrationBucketStackExportsOutputFnGetAttOviproMock1OvipromockMock1migrationsD48EF732Arn9D99CA52",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "Ovipro-Environment-Mock1-AuroraClusterStack:AuroraClusterStackExportsOutputRefMock1DbCredMigratorSecretFD4A1AB6DAA1A8F1",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MigratorServiceRoleDefaultPolicy8BA0D813",
        "Roles": Array [
          Object {
            "Ref": "MigratorServiceRoleE35D46BF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MigratorServiceRoleE35D46BF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
